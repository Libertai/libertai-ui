// This file is auto-generated by @hey-api/openapi-ts

export const BaseSubscriptionSchema = {
    properties: {
        id: {
            type: 'string',
            title: 'Id'
        },
        type: {
            '$ref': '#/components/schemas/SubscriptionType'
        },
        provider: {
            '$ref': '#/components/schemas/SubscriptionProvider'
        },
        started_at: {
            type: 'integer',
            title: 'Started At'
        },
        ended_at: {
            type: 'integer',
            title: 'Ended At'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active'
        }
    },
    type: 'object',
    required: ['id', 'type', 'provider', 'started_at', 'is_active'],
    title: 'BaseSubscription'
} as const;

export const GetUserSubscriptionsResponseSchema = {
    properties: {
        subscriptions: {
            items: {
                '$ref': '#/components/schemas/BaseSubscription'
            },
            type: 'array',
            title: 'Subscriptions'
        }
    },
    type: 'object',
    required: ['subscriptions'],
    title: 'GetUserSubscriptionsResponse'
} as const;

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const HoldDeleteSubscriptionBodySchema = {
    properties: {
        account: {
            '$ref': '#/components/schemas/SubscriptionAccount'
        },
        signature: {
            type: 'string',
            title: 'Signature'
        },
        type: {
            '$ref': '#/components/schemas/SubscriptionType'
        },
        subscription_id: {
            type: 'string',
            title: 'Subscription Id'
        }
    },
    type: 'object',
    required: ['account', 'signature', 'type', 'subscription_id'],
    title: 'HoldDeleteSubscriptionBody'
} as const;

export const HoldDeleteSubscriptionResponseSchema = {
    properties: {
        success: {
            type: 'boolean',
            title: 'Success'
        }
    },
    type: 'object',
    required: ['success'],
    title: 'HoldDeleteSubscriptionResponse'
} as const;

export const HoldGetMessagesResponseSchema = {
    properties: {
        subscribe_message: {
            type: 'string',
            title: 'Subscribe Message'
        },
        unsubscribe_message: {
            type: 'string',
            title: 'Unsubscribe Message'
        }
    },
    type: 'object',
    required: ['subscribe_message', 'unsubscribe_message'],
    title: 'HoldGetMessagesResponse'
} as const;

export const HoldPostRefreshSubscriptionsResponseSchema = {
    properties: {
        cancelled_subscriptions: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Cancelled Subscriptions'
        }
    },
    type: 'object',
    required: ['cancelled_subscriptions'],
    title: 'HoldPostRefreshSubscriptionsResponse'
} as const;

export const HoldPostSubscriptionBodySchema = {
    properties: {
        account: {
            '$ref': '#/components/schemas/SubscriptionAccount'
        },
        signature: {
            type: 'string',
            title: 'Signature'
        },
        type: {
            '$ref': '#/components/schemas/SubscriptionType'
        }
    },
    type: 'object',
    required: ['account', 'signature', 'type'],
    title: 'HoldPostSubscriptionBody'
} as const;

export const HoldPostSubscriptionResponseSchema = {
    properties: {
        post_hash: {
            type: 'string',
            title: 'Post Hash'
        },
        subscription_id: {
            type: 'string',
            title: 'Subscription Id'
        }
    },
    type: 'object',
    required: ['post_hash', 'subscription_id'],
    title: 'HoldPostSubscriptionResponse'
} as const;

export const SubsPostRefreshSubscriptionsResponseSchema = {
    properties: {
        created_subscriptions: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Created Subscriptions'
        },
        cancelled_subscriptions: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Cancelled Subscriptions'
        }
    },
    type: 'object',
    required: ['created_subscriptions', 'cancelled_subscriptions'],
    title: 'SubsPostRefreshSubscriptionsResponse'
} as const;

export const SubscriptionSchema = {
    properties: {
        id: {
            type: 'string',
            title: 'Id'
        },
        type: {
            '$ref': '#/components/schemas/SubscriptionType'
        },
        provider: {
            '$ref': '#/components/schemas/SubscriptionProvider'
        },
        started_at: {
            type: 'integer',
            title: 'Started At'
        },
        ended_at: {
            type: 'integer',
            title: 'Ended At'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active'
        },
        provider_data: {
            type: 'object',
            title: 'Provider Data'
        },
        account: {
            '$ref': '#/components/schemas/SubscriptionAccount'
        },
        tags: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Tags'
        }
    },
    type: 'object',
    required: ['id', 'type', 'provider', 'started_at', 'is_active', 'provider_data', 'account', 'tags'],
    title: 'Subscription'
} as const;

export const SubscriptionAccountSchema = {
    properties: {
        address: {
            type: 'string',
            title: 'Address'
        },
        chain: {
            '$ref': '#/components/schemas/SubscriptionChain'
        }
    },
    type: 'object',
    required: ['address', 'chain'],
    title: 'SubscriptionAccount',
    example: {
        address: '0x0000000000000000000000000000000000000000',
        chain: 'base'
    }
} as const;

export const SubscriptionChainSchema = {
    type: 'string',
    enum: ['base', 'solana'],
    title: 'SubscriptionChain',
    description: 'An enumeration.'
} as const;

export const SubscriptionProviderSchema = {
    type: 'string',
    enum: ['hold', 'subs', 'vouchers'],
    title: 'SubscriptionProvider',
    description: 'An enumeration.'
} as const;

export const SubscriptionTypeSchema = {
    type: 'string',
    enum: ['pro', 'advanced', 'agent'],
    title: 'SubscriptionType',
    description: 'An enumeration.'
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;

export const VouchersCreatedSubscriptionSchema = {
    properties: {
        account: {
            '$ref': '#/components/schemas/SubscriptionAccount'
        },
        type: {
            '$ref': '#/components/schemas/SubscriptionType'
        },
        end_time: {
            type: 'integer',
            title: 'End Time'
        },
        post_hash: {
            type: 'string',
            title: 'Post Hash'
        },
        subscription_id: {
            type: 'string',
            title: 'Subscription Id'
        }
    },
    type: 'object',
    required: ['account', 'type', 'end_time', 'post_hash', 'subscription_id'],
    title: 'VouchersCreatedSubscription'
} as const;

export const VouchersDeleteSubscribeBodySchema = {
    properties: {
        subscription_ids: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Subscription Ids'
        }
    },
    type: 'object',
    required: ['subscription_ids'],
    title: 'VouchersDeleteSubscribeBody'
} as const;

export const VouchersDeleteSubscriptionResponseSchema = {
    properties: {
        cancelled_subscriptions: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Cancelled Subscriptions'
        },
        not_found_subscriptions: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Not Found Subscriptions'
        }
    },
    type: 'object',
    required: ['cancelled_subscriptions', 'not_found_subscriptions'],
    title: 'VouchersDeleteSubscriptionResponse'
} as const;

export const VouchersPostRefreshSubscriptionsResponseSchema = {
    properties: {
        cancelled_subscriptions: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Cancelled Subscriptions'
        }
    },
    type: 'object',
    required: ['cancelled_subscriptions'],
    title: 'VouchersPostRefreshSubscriptionsResponse'
} as const;

export const VouchersPostSubscribeBodySchema = {
    properties: {
        subscriptions: {
            items: {
                '$ref': '#/components/schemas/VouchersSubscription'
            },
            type: 'array',
            title: 'Subscriptions'
        },
        password: {
            type: 'string',
            title: 'Password'
        }
    },
    type: 'object',
    required: ['subscriptions', 'password'],
    title: 'VouchersPostSubscribeBody'
} as const;

export const VouchersPostSubscriptionResponseSchema = {
    properties: {
        created_subscriptions: {
            items: {
                '$ref': '#/components/schemas/VouchersCreatedSubscription'
            },
            type: 'array',
            title: 'Created Subscriptions'
        }
    },
    type: 'object',
    required: ['created_subscriptions'],
    title: 'VouchersPostSubscriptionResponse'
} as const;

export const VouchersSubscriptionSchema = {
    properties: {
        account: {
            '$ref': '#/components/schemas/SubscriptionAccount'
        },
        type: {
            '$ref': '#/components/schemas/SubscriptionType'
        },
        end_time: {
            type: 'integer',
            title: 'End Time'
        }
    },
    type: 'object',
    required: ['account', 'type', 'end_time'],
    title: 'VouchersSubscription'
} as const;