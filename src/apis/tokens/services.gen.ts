// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-axios';
import type { CheckAuthAuthCheckGetError, CheckAuthAuthCheckGetResponse, TokenMessageTokenMessageGetError, TokenMessageTokenMessageGetResponse, TokenCreateTokenPostData, TokenCreateTokenPostError, TokenCreateTokenPostResponse, AccountStatusAccountAddressStatusGetData, AccountStatusAccountAddressStatusGetError, AccountStatusAccountAddressStatusGetResponse, AccountDeleteAccountAddressDeleteError, AccountDeleteAccountAddressDeleteResponse, AccountMetricsAccountMetricsSha1TokenGetData, AccountMetricsAccountMetricsSha1TokenGetError, AccountMetricsAccountMetricsSha1TokenGetResponse, AccountListAccountAddressListGetData, AccountListAccountAddressListGetError, AccountListAccountAddressListGetResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Check Auth
 */
export const checkAuthAuthCheckGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<CheckAuthAuthCheckGetResponse, CheckAuthAuthCheckGetError, ThrowOnError>({
        ...options,
        url: '/auth/check'
    });
};

/**
 * Token Message
 */
export const tokenMessageTokenMessageGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<TokenMessageTokenMessageGetResponse, TokenMessageTokenMessageGetError, ThrowOnError>({
        ...options,
        url: '/token/message'
    });
};

/**
 * Token Create
 */
export const tokenCreateTokenPost = <ThrowOnError extends boolean = false>(options: Options<TokenCreateTokenPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<TokenCreateTokenPostResponse, TokenCreateTokenPostError, ThrowOnError>({
        ...options,
        url: '/token'
    });
};

/**
 * Account Status
 */
export const accountStatusAccountAddressStatusGet = <ThrowOnError extends boolean = false>(options: Options<AccountStatusAccountAddressStatusGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<AccountStatusAccountAddressStatusGetResponse, AccountStatusAccountAddressStatusGetError, ThrowOnError>({
        ...options,
        url: '/account/{address}/status'
    });
};

/**
 * Account Delete
 */
export const accountDeleteAccountAddressDelete = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).delete<AccountDeleteAccountAddressDeleteResponse, AccountDeleteAccountAddressDeleteError, ThrowOnError>({
        ...options,
        url: '/account/{address}'
    });
};

/**
 * Account Metrics
 */
export const accountMetricsAccountMetricsSha1TokenGet = <ThrowOnError extends boolean = false>(options: Options<AccountMetricsAccountMetricsSha1TokenGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<AccountMetricsAccountMetricsSha1TokenGetResponse, AccountMetricsAccountMetricsSha1TokenGetError, ThrowOnError>({
        ...options,
        url: '/account/metrics/{sha1_token}'
    });
};

/**
 * Account List
 */
export const accountListAccountAddressListGet = <ThrowOnError extends boolean = false>(options: Options<AccountListAccountAddressListGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<AccountListAccountAddressListGetResponse, AccountListAccountAddressListGetError, ThrowOnError>({
        ...options,
        url: '/account/{address}/list'
    });
};