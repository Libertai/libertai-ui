// This file is auto-generated by @hey-api/openapi-ts

export const AccountSchema = {
    properties: {
        address: {
            type: 'string',
            title: 'Address'
        },
        chain: {
            '$ref': '#/components/schemas/SubscriptionChain'
        },
        signature: {
            type: 'string',
            title: 'Signature'
        }
    },
    type: 'object',
    required: ['address', 'chain'],
    title: 'Account',
    example: {
        address: '0x0000000000000000000000000000000000000000',
        chain: 'base'
    }
} as const;

export const AccountListResponseSchema = {
    properties: {
        accounts: {
            items: {
                '$ref': '#/components/schemas/TokenAccount'
            },
            type: 'array',
            title: 'Accounts'
        },
        reveal_message: {
            type: 'string',
            title: 'Reveal Message'
        }
    },
    type: 'object',
    required: ['accounts', 'reveal_message'],
    title: 'AccountListResponse'
} as const;

export const CreateAccountSchema = {
    properties: {
        account: {
            '$ref': '#/components/schemas/SubscriptionAccount'
        },
        signature: {
            type: 'string',
            title: 'Signature'
        }
    },
    type: 'object',
    required: ['account', 'signature'],
    title: 'CreateAccount'
} as const;

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const SubscriptionSchema = {
    properties: {
        id: {
            type: 'string',
            title: 'Id'
        },
        type: {
            '$ref': '#/components/schemas/SubscriptionType'
        },
        provider: {
            '$ref': '#/components/schemas/SubscriptionProvider'
        },
        started_at: {
            type: 'integer',
            title: 'Started At'
        },
        ended_at: {
            type: 'integer',
            title: 'Ended At'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active'
        },
        provider_data: {
            type: 'object',
            title: 'Provider Data'
        },
        account: {
            '$ref': '#/components/schemas/SubscriptionAccount'
        },
        tags: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Tags'
        }
    },
    type: 'object',
    required: ['id', 'type', 'provider', 'started_at', 'is_active', 'provider_data', 'account', 'tags'],
    title: 'Subscription'
} as const;

export const SubscriptionAccountSchema = {
    properties: {
        address: {
            type: 'string',
            title: 'Address'
        },
        chain: {
            '$ref': '#/components/schemas/SubscriptionChain'
        }
    },
    type: 'object',
    required: ['address', 'chain'],
    title: 'SubscriptionAccount',
    example: {
        address: '0x0000000000000000000000000000000000000000',
        chain: 'base'
    }
} as const;

export const SubscriptionChainSchema = {
    type: 'string',
    enum: ['base', 'solana'],
    title: 'SubscriptionChain',
    description: 'An enumeration.'
} as const;

export const SubscriptionProviderSchema = {
    type: 'string',
    enum: ['hold', 'subs', 'vouchers'],
    title: 'SubscriptionProvider',
    description: 'An enumeration.'
} as const;

export const SubscriptionTypeSchema = {
    type: 'string',
    enum: ['pro', 'advanced', 'agent'],
    title: 'SubscriptionType',
    description: 'An enumeration.'
} as const;

export const TokenAccountSchema = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        token: {
            type: 'string',
            title: 'Token',
            default: '**hidden**'
        },
        sha1_token: {
            type: 'string',
            title: 'Sha1 Token'
        },
        owner: {
            type: 'string',
            title: 'Owner'
        },
        subscription: {
            '$ref': '#/components/schemas/Subscription'
        }
    },
    type: 'object',
    required: ['name', 'sha1_token', 'owner', 'subscription'],
    title: 'TokenAccount'
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;