// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options, formDataBodySerializer } from '@hey-api/client-axios';
import type { SetupAgentPostData, SetupAgentPostError, SetupAgentPostResponse, DeleteAgentDeleteData, DeleteAgentDeleteError, DeleteAgentDeleteResponse, GetAgentPublicInfoAgentAgentIdGetData, GetAgentPublicInfoAgentAgentIdGetError, GetAgentPublicInfoAgentAgentIdGetResponse, UpdateAgentAgentIdPutData, UpdateAgentAgentIdPutError, UpdateAgentAgentIdPutResponse, GetAgentSecretAgentAgentIdSecretGetData, GetAgentSecretAgentAgentIdSecretGetError, GetAgentSecretAgentAgentIdSecretGetResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Setup
 * Setup a new agent on subscription
 */
export const setupAgentPost = <ThrowOnError extends boolean = false>(options: Options<SetupAgentPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<SetupAgentPostResponse, SetupAgentPostError, ThrowOnError>({
        ...options,
        url: '/agent'
    });
};

/**
 * Delete
 * Remove an agent on subscription end
 */
export const deleteAgentDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteAgentDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteAgentDeleteResponse, DeleteAgentDeleteError, ThrowOnError>({
        ...options,
        url: '/agent'
    });
};

/**
 * Get Agent Public Info
 * Get an agent public information
 */
export const getAgentPublicInfoAgentAgentIdGet = <ThrowOnError extends boolean = false>(options: Options<GetAgentPublicInfoAgentAgentIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetAgentPublicInfoAgentAgentIdGetResponse, GetAgentPublicInfoAgentAgentIdGetError, ThrowOnError>({
        ...options,
        url: '/agent/{agent_id}'
    });
};

/**
 * Update
 * Deploy an agent or update it
 */
export const updateAgentAgentIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateAgentAgentIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateAgentAgentIdPutResponse, UpdateAgentAgentIdPutError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/agent/{agent_id}'
    });
};

/**
 * Get Agent Secret
 * Get an agent secret
 */
export const getAgentSecretAgentAgentIdSecretGet = <ThrowOnError extends boolean = false>(options: Options<GetAgentSecretAgentAgentIdSecretGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetAgentSecretAgentAgentIdSecretGetResponse, GetAgentSecretAgentAgentIdSecretGetError, ThrowOnError>({
        ...options,
        url: '/agent/{agent_id}/secret'
    });
};